name: Code Quality Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  analyze:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        id: prettier
        run: |
          echo "Running Prettier check..."
          if ! npx prettier --check "src/**/*.{ts,tsx,css,json,md}"; then
            echo "❌ Prettier check failed. Run 'npm run format' to fix."
            echo "prettier_failed=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ Prettier check passed"
          fi

      - name: Run ESLint
        id: eslint
        run: |
          echo "Running ESLint..."
          npx eslint "src/**/*.{ts,tsx}" --max-warnings 0
        continue-on-error: true

      - name: Run TypeScript type check
        id: typecheck
        run: |
          echo "Running TypeScript type check..."
          npx tsc --noEmit
        continue-on-error: true

      - name: Check for console logs
        id: console-check
        run: |
          echo "Checking for console statements..."
          if grep -r "console\.\(log\|warn\|error\)" src/ --include="*.ts" --include="*.tsx" | grep -v "//.*console"; then
            echo "⚠️ Console statements found in source code"
            exit 1
          else
            echo "✅ No console statements found"
          fi
        continue-on-error: true

      - name: Build project
        id: build
        run: |
          echo "Building project..."
          npm run build

      - name: Check bundle size
        id: bundle-size
        run: |
          echo "Analyzing bundle size..."
          echo "## Bundle Size Report" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          du -sh dist/ >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          du -h dist/* | sort -hr | head -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          # Check if bundle is too large (adjust threshold as needed)
          BUNDLE_SIZE=$(du -sm dist/ | cut -f1)
          MAX_SIZE=50
          if [ $BUNDLE_SIZE -gt $MAX_SIZE ]; then
            echo "⚠️ Bundle size ($BUNDLE_SIZE MB) exceeds maximum ($MAX_SIZE MB)"
            echo "bundle_warning=true" >> $GITHUB_OUTPUT
          else
            echo "✅ Bundle size is acceptable ($BUNDLE_SIZE MB)"
          fi

      - name: Analyze dependencies
        run: |
          echo "## Dependency Analysis" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm list --depth=0 >> $GITHUB_STEP_SUMMARY 2>&1 || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Check for outdated packages
        run: |
          echo "## Outdated Packages" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          npm outdated >> $GITHUB_STEP_SUMMARY 2>&1 || true
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Run security audit
        run: |
          echo "Running npm audit..."
          npm audit --audit-level=moderate || true

      - name: Summary
        if: always()
        run: |
          echo "## Code Quality Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Prettier | ${{ steps.prettier.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ESLint | ${{ steps.eslint.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| TypeScript | ${{ steps.typecheck.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build | ${{ steps.build.outcome == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bundle Size | ${{ steps.bundle-size.outputs.bundle_warning == 'true' && '⚠️ Warning' || '✅ Passed' }} |" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Code quality checks failed. Please review the workflow run for details.'
            })